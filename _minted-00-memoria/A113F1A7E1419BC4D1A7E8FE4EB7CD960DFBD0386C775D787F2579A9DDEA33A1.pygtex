\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{c+c1}{// Create the PUB socket and bind it to the port 5555}
\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{Socket} \PYG{n}{publisher} \PYG{o}{=} \PYG{n}{context}\PYG{o}{.}\PYG{n+na}{createSocket}\PYG{o}{(}\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{PUB}\PYG{o}{);}
\PYG{n}{publisher}\PYG{o}{.}\PYG{n+na}{bind}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}tcp://*:6555\PYGZdq{}}\PYG{o}{);}

\PYG{c+c1}{// Create the PULL socket and bind it to the port 5554}
\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{Socket} \PYG{n}{pull} \PYG{o}{=} \PYG{n}{context}\PYG{o}{.}\PYG{n+na}{createSocket}\PYG{o}{(}\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{PULL}\PYG{o}{);}
\PYG{n}{pull}\PYG{o}{.}\PYG{n+na}{bind}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}tcp://*:6554\PYGZdq{}}\PYG{o}{);}

\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{Socket}\PYG{o}{[]} \PYG{n}{participantsConnectedPush} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{Socket}\PYG{o}{[}\PYG{n}{roomSize}\PYG{o}{];}
\PYG{c+c1}{// Wait to receive \PYGZlt{}numberOfNodes\PYGZgt{} connections from each node that wants to send a message in this room}
\PYG{k}{for} \PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{roomSize}\PYG{o}{;} \PYG{n}{i}\PYG{o}{++)} \PYG{o}{\PYGZob{}}
    \PYG{c+c1}{// Receive a message from the PULL socket, which corresponds to the IP address of this node}
    \PYG{n}{String} \PYG{n}{messageReceived} \PYG{o}{=} \PYG{n}{pull}\PYG{o}{.}\PYG{n+na}{recvStr}\PYG{o}{();}
    \PYG{c+c1}{// Assign an index to this node and store it in the nodesInTheRoom with his correspondent IP address}
    \PYG{k}{this}\PYG{o}{.}\PYG{n+na}{infoFromDirectory}\PYG{o}{.}\PYG{n+na}{nodes}\PYG{o}{[}\PYG{n}{i}\PYG{o}{]} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ParticipantNodeInfoFromDirectory}\PYG{o}{(}\PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{o}{,} \PYG{n}{messageReceived}\PYG{o}{);}
    \PYG{c+c1}{// Send ACK to participant that just connected}
    \PYG{n}{participantsConnectedPush}\PYG{o}{[}\PYG{n}{i}\PYG{o}{]} \PYG{o}{=} \PYG{n}{context}\PYG{o}{.}\PYG{n+na}{createSocket}\PYG{o}{(}\PYG{n}{ZMQ}\PYG{o}{.}\PYG{n+na}{PUSH}\PYG{o}{);}
    \PYG{n}{participantsConnectedPush}\PYG{o}{[}\PYG{n}{i}\PYG{o}{].}\PYG{n+na}{connect}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}tcp://\PYGZdq{}} \PYG{o}{+} \PYG{n}{messageReceived} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}:5554\PYGZdq{}}\PYG{o}{);}
    \PYG{n}{participantsConnectedPush}\PYG{o}{[}\PYG{n}{i}\PYG{o}{].}\PYG{n+na}{send}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}ack\PYGZdq{}}\PYG{o}{);}
    \PYG{c+c1}{// Notify of change to observer}
    \PYG{n}{participantConnected}\PYG{o}{.}\PYG{n+na}{setValue}\PYG{o}{(}\PYG{n}{messageReceived}\PYG{o}{);}
    \PYG{c+c1}{// Send message to all connected participants of how many participants left to complete the room}
    \PYG{n}{sendHowManyParticipantsLeft}\PYG{o}{(}\PYG{n}{participantsConnectedPush}\PYG{o}{,} \PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{o}{);}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
